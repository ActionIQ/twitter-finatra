FINATRA_KAFKA_CROSS = [
    {
        "kafka": "",
        "?kafka_src": "2.4",
    },
    {
        "kafka": "2.5",
        "?kafka_src": "2.5",
    },
]

cross_scala_library(
    name = "test-deps",
    sources = [
        "com/twitter/finatra/kafkastreams/test/*.scala",
        "com/twitter/inject/*.scala",

        # The below entries are trying to achieve the same effect in Pants and Bazel.
        # This is taken in Pants; entry starting with ".." will be ignored by Bazel
        "../scala-kafka{?kafka_src}/*.scala",
        # This is a bazel filegroup target, however, Pants will see this as a path to match files,
        # which would return nothing.
        "finatra/kafka-streams/kafka-streams/src/test/scala-kafka{?kafka_src}:kafka{?kafka_src}",
    ],
    compiler_option_sets = ["fatal_warnings"],
    cross_build = FINATRA_KAFKA_CROSS,
    provides = scala_artifact(
        org = "com.twitter",
        name = "finatra-streams-tests{-kafka}",
        repo = artifactory,
    ),
    strict_deps = True,
    dependencies = [
        "3rdparty/jvm/com/google/inject:guice",
        "3rdparty/jvm/junit",
        "3rdparty/jvm/org/apache/kafka:kafka-clients-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-clients{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams-test-utils{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka{-kafka}",
        "3rdparty/jvm/org/apache/zookeeper:zookeeper-server",
        "3rdparty/jvm/org/scalatest",
        "finatra/inject/inject-core/src/main/scala/com/twitter/inject",
        "finatra/inject/inject-core/src/test/scala/com/twitter/inject",
        "finatra/inject/inject-slf4j/src/main/scala/com/twitter/inject",
        "finatra/kafka-streams/kafka-streams/src/main/scala:scala{_kafka_kafka}",
        "finatra/kafka/src/test/scala:test-deps{_kafka_kafka}",
    ],
    exports = [
        "3rdparty/jvm/com/google/inject:guice",
        "3rdparty/jvm/junit",
        "3rdparty/jvm/org/apache/kafka:kafka-clients-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-clients{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams-test-utils{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka{-kafka}",
        "3rdparty/jvm/org/apache/zookeeper:zookeeper-server",
        "3rdparty/jvm/org/scalatest",
        "finatra/inject/inject-core/src/main/scala/com/twitter/inject",
        "finatra/inject/inject-core/src/test/scala/com/twitter/inject",
        "finatra/inject/inject-slf4j/src/main/scala/com/twitter/inject",
        "finatra/kafka-streams/kafka-streams/src/main/scala:scala{_kafka_kafka}",
        "finatra/kafka/src/test/scala:test-deps{_kafka_kafka}",
    ],
)

cross_junit_tests(
    name = "scala",
    sources = [
        "com/twitter/finatra/kafkastreams/integration/**/*.scala",
        "com/twitter/finatra/kafkastreams/query/**/*.scala",
        "com/twitter/finatra/kafkastreams/transformer/**/*.scala",
    ],
    compiler_option_sets = ["fatal_warnings"],
    cross_build = FINATRA_KAFKA_CROSS,
    strict_deps = True,
    dependencies = [
        "3rdparty/jvm/org/apache/kafka:kafka-clients-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams-test-utils{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams-test{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-streams{-kafka}",
        "3rdparty/jvm/org/apache/kafka:kafka-test{-kafka}",
        "3rdparty/jvm/org/apache/zookeeper:zookeeper-client",
        "3rdparty/jvm/org/apache/zookeeper:zookeeper-server",
        "3rdparty/jvm/org/mockito:mockito-core",
        "3rdparty/jvm/org/scalatestplus:junit",
        "3rdparty/jvm/org/scalatestplus:scalacheck",
        scoped(
            "3rdparty/jvm/org/slf4j:slf4j-simple",
            scope = "runtime",
        ),
        ":test-deps{_kafka_kafka}",
        "finatra/inject/inject-app/src/main/scala/com/twitter/inject/app",
        "finatra/inject/inject-core/src/main/scala/com/twitter/inject",
        "finatra/inject/inject-core/src/test/scala/com/twitter/inject",
        "finatra/inject/inject-server/src/main/scala/com/twitter/inject/server",
        "finatra/inject/inject-server/src/test/scala/com/twitter/inject/server",
        "finatra/inject/inject-slf4j/src/main/scala/com/twitter/inject",
        "finatra/jackson/src/test/scala/com/twitter/finatra/json",
        "finatra/kafka-streams/kafka-streams/src/main/scala:scala{_kafka_kafka}",
        "finatra/kafka-streams/kafka-streams/src/test/resources",
        "finatra/kafka/src/main/java",
        "finatra/kafka/src/test/scala:test-deps{_kafka_kafka}",
        "finatra/thrift/src/test/scala/com/twitter/finatra/thrift",
        "finatra/thrift/src/test/thrift:doeverything-thrift-scala",
        "util/util-mock/src/main/scala/com/twitter/util/mock",
    ],
)
